.flex() {
  overflow: hidden;
  display: flex;

  & > * {
    display: block;
    overflow: hidden;
  }
}

.flex-direction(@dir) when(@dir = left) {
  flex-direction: row;
}

.flex-direction(@dir) when(@dir = top) {
  flex-direction: column;
}

.flex-direction(@dir) when(@dir = right) {
  flex-direction: row-reverse;
  //修复旧版本主轴和标准主轴flex表现不一致的bug
  -webkit-box-pack: end;
}

.flex-direction(@dir) when(@dir = bottom) {
  flex-direction: column-reverse;
  //修复旧版本主轴和标准主轴flex表现不一致的bug
  -webkit-box-pack: end;
}

.justify-content(@main) when(@main = left) {
  justify-content: flex-start;
}

.justify-content(@main) when(@main = right) {
  justify-content: flex-end;
}

.justify-content(@main) when(@main = justify) {
  justify-content: space-between;
}

.justify-content(@main) when(@main = center) {
  justify-content: center;
}

.align-items(@cross) when(@cross = top) {
  align-items: flex-start;
}

.align-items(@cross) when(@cross = bottom) {
  align-items: flex-end;
}

.align-items(@cross) when(@cross = center) {
  align-items: center;
}

.align-items(@cross) when(@cross = baseline) {
  align-items: baseline;
}

.align-items(@cross) when(@cross = stretch) {
  align-items: stretch;
}

.fixed-items() {
  flex-grow: 0;
  flex-shrink: 0;
}

.average-items(@box) when(@box = width) {
  width: 0%;
  flex-grow: 1;
  flex-shrink: 1;
}

.average-items(@box) when(@box = height) {
  height: 0%;
  flex-grow: 1;
  flex-shrink: 1;
}
